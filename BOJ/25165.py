'''
아리는 포탈을 타야함
아리 1, Ac
부하 : sr, sc
포탈 : n, m

아리
1] 진행방향 : 왼 or 오 둘 중 하나
2] 한 행에 끝에 도달하면 한 행 내려옴, 내려오면 진행 방향 반대임

ex) 

ㅁㅁ아ㅁㅁㅁ
ㅁㅁㅁㅁㅁㅁ
ㅁㅁㅁㅁㅁㅁ
ㅁㅁㅁㅁㅁㅁ
ㅁㅁㅁㅁㅁㅁ
ㅁㅁㅁㅁ부ㅁ

-> 시뮬안해도 알 수 있는 방법
1. 아리는 1행 , n행 빼고는 다 돌아야 함
    1] 몬스터는 1행은 못 있음
    2] 몬스터가 2 ~ n-1 행이면 무조건 만남 NO
    3] 몬스터가 n행이면 
        1] 아리가 n-1행일 때 오른쪽으로 이동하면 안 만남 yes
        2] 아리가 n-1행일 때 왼쪽으로 이동하면 무조건 만남 NO
        3] 행 짝수
            1] 시작 d 0(왼) = no
            2] 시작 d 1(오) = yes
        4] 행 홀수 
            1] 시작 d 0(왼) = yes
            2] 시작 d 1(오) = no
    
1. 모경수(prt, n=1)
1) 몬스터의 행이 2 ~ n-1이면 NO
2) 몬스터 행이 n이면
        3] 전체 행 짝수
            1] 시작 d 0(왼) = no
            2] 시작 d 1(오) = yes
        4] 전체 행 홀수 
            1] 시작 d 0(왼) = yes
            2] 시작 d 1(오) = no    
    
* n, m
Ac, D : 아리의 열 ( -1 해야함) / 진행 방향(0=왼, 1=오른쪽)
sr, sc (-1 해야함)

출 : 부하를 안 만나면 yes, 만나면 no

2. nlogn
'''

n, m = map(int, input().split())
x = 0
y, d = map(int, input().split())
y -= 1
sr, sc = map(int, input().split())


if(sr >= 2 and sr <= n-1):
    print("NO...")
else:
    if(n % 2 == 0):
        if(d == 0):
            print("NO...")
        else:
            print("YES!")
    else:
        if(d == 0):
            print("YES!")
            
        else:
            print("NO...")