'''
일
1] 하루에 1시간 단위로 일을 하거나 쉬어도 됨
2] 1시간 일 = 피로도 A 추가, 일 B 성공
3] 1시간 쉼 = 피로도 C 감소, 피로도는 최소 0
4] 피로도는 M을 넘지 않을 거임, 하루 24시간에 최대 얼마나 일을 할 수 있는지

ex) 
a b c m
5 3 2 10

-> 피로도+a가 M을 넘지 않으면 무조건 일한 방식

시  한 거   일양    피로도
1   일      3       5
2   일      6       10        
3   쉼      6       8
4   쉼      6       6
5   쉼      6       4
6   일      9       9
7   쉼      9       7
8   쉼      9       5
9   일      12       10
10   쉼      12       8
11   쉼      12       6
12   쉼      12       4
13   일      15       9
14   쉼      15       7
15   쉼      15       5
16   일      18       10
10   쉼      18       8
11   쉼      18       6
12   쉼      18       4
13   일      15       9
14   쉼      15       7
15   쉼      15       5
16   일      18       10

a   b   c   m
10  5   1   10

시  한 거   일양    피로도
1   일      5       10
2   쉼      5       9
3   쉼      5       8
4   쉼      5       7
5   쉼      5       6
6   쉼      5       5
7   쉼      5       4
8   쉼      5       3
9   쉼      5       2
10  쉼      5       1
11  쉼      5       0
12  일      10      10
13
14
15
16
17
18
19
20
21
22

1. 모경수(prt, n=1)
1) 피로도 = 0, 일양 = 0
2) 총 24번 반복
    1] 피로도 + a <= m 면 피로도 + a, 일얄 + b
    2] > 피로도 - c / 피로도가 0 미만이면 0


* a b c m
맨처음 피로도 = 0

출 : 하루에 번아웃이 오지 않도록 일을 할 때 최대 얼마나?

2. nlogn
'''

a, b, c, m = map(int, input().split())
sleep = 0 # 피로도
amount = 0 # 일 양

for _ in range(24):
    if(sleep + a <= m):
        sleep = sleep + a
        amount = amount + b
    else:
        sleep = sleep - c
        if(sleep < 0):
            sleep = 0
            
print(amount)
